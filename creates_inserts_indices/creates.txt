CREATE TABLE tb_funcionarios (
    fun_codigo BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    fun_nome VARCHAR(45) NOT NULL,
    fun_cpf VARCHAR(45) NOT NULL,
    fun_senha VARCHAR(60) NOT NULL, --deixar esse valor em 60, Ã© o tamanho ideal da criptografia
    fun_funcao VARCHAR(50) NOT NULL
);

CREATE TABLE tb_vendas (
    ven_codigo BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    ven_horario TIMESTAMP,
    ven_valor_total DECIMAL(7,2),
    tb_funcionarios_fun_codigo BIGINT,
    FOREIGN KEY (tb_funcionarios_fun_codigo) REFERENCES tb_funcionarios(fun_codigo)
); 

CREATE TABLE tb_fornecedores (
    for_codigo BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    for_descricao VARCHAR(45) NOT NULL
);

CREATE TABLE tb_produtos (
    pro_codigo BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    pro_descricao VARCHAR(45) NOT NULL,
    pro_valor DECIMAL(7,2),
    pro_quantidade INT,
    tb_fornecedores_fun_codigo BIGINT,
    FOREIGN KEY (tb_fornecedores_fun_codigo) REFERENCES tb_fornecedores(for_codigo)
);

CREATE TABLE tb_vendas_itens (
    vite_codigo BIGINT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    vite_quantidade INT,
    vite_valor_parcial DECIMAL(7,2),
    tb_produtos_pro_codigo BIGINT,
    tb_vendas_ven_codigo BIGINT,
    FOREIGN KEY (tb_produtos_pro_codigo) REFERENCES tb_produtos(pro_codigo),
    FOREIGN KEY (tb_vendas_ven_codigo) REFERENCES tb_vendas(ven_codigo)
);